{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/vladislav/Documents/GitHub/military_asu/client/src/components/Table/TableComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport \"../../App.css\";\nimport { useSelector } from 'react-redux';\nimport MaterialTable from \"material-table\";\nimport { dataArray, dataColumn } from \"../../data\";\nexport const TableComponent = () => {\n  _s();\n\n  const [columns, setColumns] = useState(dataColumn);\n  const [data, setData] = useState(dataArray); // const cols = useSelector(state => state.data.cols)\n\n  const datas = useSelector(state => state.data.parsedData);\n  const colss = data[0];\n  const arrWithoutElement = datas.slice(1);\n  console.log(arrWithoutElement); // const {request} = useHttp();\n\n  return /*#__PURE__*/_jsxDEV(MaterialTable, {\n    title: \"\",\n    columns: columns,\n    data: arrWithoutElement,\n    options: {\n      pageSize: 10,\n      pageSizeOptions: [20, 30, 40, 50, 60, 70, 80]\n    },\n    cellEditable: {\n      onCellEditApproved: (newValue, oldValue, rowData, columnDef) => {\n        rowData[columnDef.field] = newValue;\n        return new Promise(async (resolve, reject) => {\n          console.log('newValue: ' + newValue);\n          setTimeout(resolve, 1000);\n          console.log(data); // await request(`https://localhost:8080/table`, 'POST', data)\n        });\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TableComponent, \"YfP5qY8WOUx8fFZNA2RJf3S7xF4=\", false, function () {\n  return [useSelector];\n});\n\n_c = TableComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"sources":["/home/vladislav/Documents/GitHub/military_asu/client/src/components/Table/TableComponent.jsx"],"names":["React","useState","styled","useSelector","MaterialTable","dataArray","dataColumn","TableComponent","columns","setColumns","data","setData","datas","state","parsedData","colss","arrWithoutElement","slice","console","log","pageSize","pageSizeOptions","onCellEditApproved","newValue","oldValue","rowData","columnDef","field","Promise","resolve","reject","setTimeout"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,eAAP;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAAQC,SAAR,EAAmBC,UAAnB,QAAoC,YAApC;AAGA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAACK,UAAD,CAAtC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAACI,SAAD,CAAhC,CAFgC,CAGhC;;AACA,QAAMO,KAAK,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACH,IAAN,CAAWI,UAArB,CAAzB;AACA,QAAMC,KAAK,GAAGL,IAAI,CAAC,CAAD,CAAlB;AACA,QAAMM,iBAAiB,GAAGJ,KAAK,CAACK,KAAN,CAAY,CAAZ,CAA1B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,iBAAZ,EAPgC,CAQhC;;AACA,sBACI,QAAC,aAAD;AACI,IAAA,KAAK,EAAC,EADV;AAEI,IAAA,OAAO,EAAER,OAFb;AAGI,IAAA,IAAI,EAAEQ,iBAHV;AAII,IAAA,OAAO,EAAE;AACLI,MAAAA,QAAQ,EAAE,EADL;AAELC,MAAAA,eAAe,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAFZ,KAJb;AAQI,IAAA,YAAY,EAAE;AACVC,MAAAA,kBAAkB,EAAE,CAACC,QAAD,EAAWC,QAAX,EAAqBC,OAArB,EAA8BC,SAA9B,KAA4C;AAC5DD,QAAAA,OAAO,CAACC,SAAS,CAACC,KAAX,CAAP,GAA2BJ,QAA3B;AACA,eAAO,IAAIK,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;AAC1CZ,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAeI,QAA3B;AACAQ,UAAAA,UAAU,CAACF,OAAD,EAAU,IAAV,CAAV;AACAX,UAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ,EAH0C,CAI1C;AACH,SALM,CAAP;AAMH;AATS;AARlB;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA/BM;;GAAMH,c;UAIKJ,W;;;KAJLI,c","sourcesContent":["import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport \"../../App.css\"\nimport {useSelector} from 'react-redux'\nimport MaterialTable from \"material-table\";\nimport {dataArray, dataColumn} from \"../../data\";\n\n\nexport const TableComponent = () => {\n    const [columns, setColumns] = useState(dataColumn);\n    const [data, setData] = useState(dataArray);\n    // const cols = useSelector(state => state.data.cols)\n    const datas = useSelector(state => state.data.parsedData)\n    const colss = data[0]\n    const arrWithoutElement = datas.slice(1)\n    console.log(arrWithoutElement)\n    // const {request} = useHttp();\n    return (\n        <MaterialTable\n            title=\"\"\n            columns={columns}\n            data={arrWithoutElement}\n            options={{\n                pageSize: 10,\n                pageSizeOptions: [20, 30, 40, 50, 60, 70, 80]\n            }}\n            cellEditable={{\n                onCellEditApproved: (newValue, oldValue, rowData, columnDef) => {\n                    rowData[columnDef.field] = newValue\n                    return new Promise(async (resolve, reject) => {\n                        console.log('newValue: ' + newValue);\n                        setTimeout(resolve, 1000);\n                        console.log(data)\n                        // await request(`https://localhost:8080/table`, 'POST', data)\n                    });\n                }\n            }}\n        />\n    )\n}\n"]},"metadata":{},"sourceType":"module"}