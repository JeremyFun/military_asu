{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/vladislav/Documents/GitHub/military_asu/client/src/components/DropZone/DropZone.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport XLSX from 'xlsx';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UploadInput } from '../UploadInput';\nimport { setData, setColumns, setFileName } from '../common/actions';\nimport { makeColumns } from '../lib/utils';\nconst UploadWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 500px;\n  height: 400px;\n  margin-top: 50px;\n  background: ${({\n  isDragging\n}) => isDragging ? 'pink' : 'whitesmoke'};\n  border: 2px dashed black;\n  }\n`;\n_c = UploadWrapper;\nconst DropZoneTitle = styled.div`\n  font-size: 25px;\n  text-align: center;\n  width: 100%;\n  padding: 5px;\n`;\n_c2 = DropZoneTitle;\nconst SuccessTitle = styled.p`\n  color: green;\n`;\n_c3 = SuccessTitle;\nexport const DropZone = () => {\n  _s();\n\n  const [isDragging, setIsDragging] = useState(false);\n  const fileName = useSelector(state => state.data.fileName);\n  const dispatch = useDispatch();\n\n  const handleDragEnter = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    console.log('ENTER');\n\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n      setIsDragging(true);\n    }\n  };\n\n  const handleDragLeave = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(false);\n  };\n\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragging(false);\n    const files = e.dataTransfer.files,\n          f = files[0];\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (files.length) {\n        handleFile(files[0]);\n      }\n    };\n\n    reader.readAsArrayBuffer(f);\n  };\n\n  const handleFile = async file => {\n    const reader = new FileReader();\n    const rABS = !!reader.readAsBinaryString;\n\n    reader.onload = e => {\n      const bstr = e.target.result;\n      const wb = XLSX.read(bstr, {\n        type: rABS ? 'binary' : 'array'\n      });\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      const data = XLSX.utils.sheet_to_json(ws, {\n        header: 1\n      });\n      dispatch(setData(data));\n      dispatch(setColumns(makeColumns(ws['!ref'])));\n      dispatch(setFileName(file.name));\n    };\n\n    if (rABS) reader.readAsBinaryString(file);else reader.readAsArrayBuffer(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(UploadWrapper, {\n    isDragging: isDragging,\n    onDragEnter: handleDragEnter,\n    onDragLeave: handleDragLeave,\n    onDrop: handleDrop,\n    children: [/*#__PURE__*/_jsxDEV(DropZoneTitle, {\n      children: fileName ? /*#__PURE__*/_jsxDEV(SuccessTitle, {\n        children: [fileName, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 45\n        }, this), \"\\u0423\\u0441\\u043F\\u0456\\u0448\\u043D\\u043E \\u0437\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043E \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 71\n        }, this), \" \\u043D\\u0430\\u0442\\u0438\\u0441\\u043D\\u0456\\u0442\\u044C \\u043F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u0438 \\u0442\\u0430\\u0431\\u043B\\u0438\\u0446\\u044E\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 20\n      }, this) : 'Перетягніть сюди файл'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UploadInput, {\n      handleFile: handleFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropZone, \"zG1jAnxyaLVYzDj6R0lQxvEaLtU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c4 = DropZone;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"UploadWrapper\");\n$RefreshReg$(_c2, \"DropZoneTitle\");\n$RefreshReg$(_c3, \"SuccessTitle\");\n$RefreshReg$(_c4, \"DropZone\");","map":{"version":3,"sources":["/home/vladislav/Documents/GitHub/military_asu/client/src/components/DropZone/DropZone.jsx"],"names":["React","useState","styled","XLSX","useDispatch","useSelector","UploadInput","setData","setColumns","setFileName","makeColumns","UploadWrapper","div","isDragging","DropZoneTitle","SuccessTitle","p","DropZone","setIsDragging","fileName","state","data","dispatch","handleDragEnter","e","preventDefault","stopPropagation","console","log","dataTransfer","items","length","handleDragLeave","handleDrop","files","f","reader","FileReader","onload","handleFile","readAsArrayBuffer","file","rABS","readAsBinaryString","bstr","target","result","wb","read","type","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","header","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport XLSX from 'xlsx'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UploadInput } from '../UploadInput'\nimport { setData, setColumns, setFileName } from '../common/actions';\nimport { makeColumns } from '../lib/utils'\n\nconst UploadWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 500px;\n  height: 400px;\n  margin-top: 50px;\n  background: ${({ isDragging }) => isDragging ? 'pink' : 'whitesmoke'};\n  border: 2px dashed black;\n  }\n`\nconst DropZoneTitle = styled.div`\n  font-size: 25px;\n  text-align: center;\n  width: 100%;\n  padding: 5px;\n`\nconst SuccessTitle = styled.p`\n  color: green;\n`\n\nexport const  DropZone = () => {\n  const [isDragging, setIsDragging] = useState(false)\n  const fileName = useSelector(state => state.data.fileName)\n  const dispatch = useDispatch()\n\n  const handleDragEnter = e => {\n    e.preventDefault()\n    e.stopPropagation()\n    console.log('ENTER')\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n      setIsDragging(true)\n    }\n  }\n\n  const handleDragLeave = e => {\n    e.preventDefault()\n    e.stopPropagation()\n    setIsDragging(false)\n  }\n\n  const handleDrop = e => {\n    e.preventDefault()\n    e.stopPropagation()\n    setIsDragging(false)\n    const files = e.dataTransfer.files, f = files[0]\n    const reader = new FileReader()\n\n    reader.onload = () => {\n      if (files.length) {\n        handleFile(files[0])\n      }\n    }\n    reader.readAsArrayBuffer(f)\n  }\n\n  const handleFile = async (file) => {\n    const reader = new FileReader()\n\t\tconst rABS = !!reader.readAsBinaryString\n\t\treader.onload = e => {\n      const bstr = e.target.result\n\t\t\tconst wb = XLSX.read(bstr, {type:rABS ? 'binary' : 'array'})\n\t\t\tconst wsname = wb.SheetNames[0]\n\t\t\tconst ws = wb.Sheets[wsname]\n\t\t\tconst data = XLSX.utils.sheet_to_json(ws, { header:1 })\n      dispatch(setData(data))\n      dispatch(setColumns(makeColumns(ws['!ref'])))\n      dispatch(setFileName(file.name))\n\t\t}\n\t\tif(rABS) reader.readAsBinaryString(file); else reader.readAsArrayBuffer(file);\n  }\n\n  return (\n    <UploadWrapper isDragging={isDragging} onDragEnter={handleDragEnter} onDragLeave={handleDragLeave} onDrop={handleDrop}>\n      <DropZoneTitle>\n      {\n        fileName ? <SuccessTitle>{fileName} <br />Успішно завантажено <br /> натисніть показати таблицю</SuccessTitle> : 'Перетягніть сюди файл'\n      }\n      </DropZoneTitle>\n      <UploadInput handleFile={handleFile} />\n    </UploadWrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}